#!/usr/bin/python3
from sys import argv

with open(argv[1]) as f:
    for line in f:
        num = int(line)
        print("{:d}=".format(num), end="")
        if num % 2 == 0:
            print("{}*2".format(num//2))
            continue
        for i in range(3, num, 2):
            if num % i == 0:
                factor = num//i
                for j in range(3, factor, 2):
                    if factor % j == 0 or i % j == 0:
                        break
                print("{}*{}".format(factor, i))
                break
def is_prime(num):
    # Check if a number is prime
    if num < 2:
        # If num is less than 2, it is not prime, so return False
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        # If num is divisible by any number in the range [2, sqrt(num)],\
        #        it is not prime, so return False
        if num % i == 0:
            return False
    # If num is not divisible by any number in the \
    #        range [2, sqrt(num)], it is prime, so return True
    return True

def main():
    # Check if the correct number of command-line arguments is provided
    if len(sys.argv) != 2:
        print("Usage: python factorize.py <file>")
        return

    file_path = sys.argv[1]

    start_time = time.time()
    try:
        with open(file_path, 'r') as file:
            # Read the first line of the file and convert it to an integer
            number = int(file.readline().strip())
        # Factorize the number using Pollard's rho algorithm
        p = pollard_rho(number)
        # Continue factorizing until a prime factor is found
        while not is_prime(p):
            p = pollard_rho(p)
        q = number // p
        # The number is prime
        if p == number or q == number:
            print(f"{number} is prime.")
        else:
            # Print the prime factors
            print(f"{number}={p}*{q}")

        if time.time() - start_time > 5:
            print("Time limit exceeded")
            exit()
    
    except FileNotFoundError:
        print(f"File '{file_path}' not found.")


if __name__ == '__main__':
    main()

